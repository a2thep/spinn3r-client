/*

http://code.google.com/p/spinn3r-client/source/checkout
SSH into repo and run:

    svn up
    protoc --proto_path=src/proto --java_out=src/java src/proto/spinn3rApi.proto
    ant compile
    svn commit -m "new protobufs"
    
*/

package contentApi;

option java_package         = "com.spinn3r.api.protobuf";
option java_outer_classname = "ContentApi";

message Link {
  optional string href      = 1;
  optional string resource  = 2;
  optional string mime_type = 3;
  optional string rel       = 4;
}

message Lang {
  optional string code        = 1;
  optional float  probability = 2;
}

message Content {
  required string mime_type = 1;
  optional bytes  data      = 2;
  enum Encoding {
  	UNKNWON = 0;
  	UTF_8 = 1;
  	BASE64_ZLIB = 2;
  	ZLIB = 4;
  }
  optional Encoding encoding  = 3;
}

message Author {
  optional string name  = 1;
  optional string email = 2;
  repeated Link   link  = 3;
}

/**
 * TODO: geographic information for this blog.  Note that this might need to be
 * tied to an author.
 */
message Source {
  repeated Link   link                  = 1;
  optional Link   canonical_link        = 2;
  optional string title                 = 3;
  optional string hashcode              = 4;
  repeated Lang   lang                  = 5;
  optional string generator             = 6;
  optional string description           = 7;
  optional int32  resource_status       = 8;
  optional string last_posted           = 9;
  optional string last_published        = 10;
  optional string date_found            = 11;
  optional string etag                  = 12;
  optional float  spam_probability      = 13;

  optional sint32 tier                  = 14;
  optional int32  indegree              = 15;
  optional string publisher_type        = 16;
  optional bool   disabled              = 17;
  optional string registered_by_vendor  = 18;
}

message Feed {
  repeated Link   link             = 1;
  optional Link   canonical_link   = 2;
  optional string title            = 3;
  optional string hashcode         = 4;
  repeated Lang   lang             = 5;
  optional string generator        = 6;
  optional string description      = 7;
  optional int32  resource_status  = 8;
  optional string last_posted      = 9;
  optional string last_published   = 10;
  optional string date_found       = 11;
  optional string etag             = 12;
  optional float  spam_probability = 13;

  optional Link   channel_link     = 14;
}

/**
 * raw_published:
 * 
 * The raw and opaque string specified by the entry, often in the HTML, which
 * represents the time the user/site thinks this story was published.  Although
 * this MAY be parsable by algorithsm like ISO 8601 or RFC 822, it may not be
 * parsable and internalized into a date model.  One example is if the site
 * omits a timezone.  Another is if they only use the day (Jan 1, 1970) and not
 * a time.
 */
message PermalinkEntry {

  repeated Link    link             = 1;
  optional Link    canonical_link   = 2;
  optional string  title            = 3;
  optional string  hashcode         = 4;
  repeated Lang    lang             = 5;
  repeated Author  author           = 6;
  repeated string  category         = 7;
  optional float   spam_probability = 8;
  optional string  last_published   = 9;
  optional string  date_found       = 10;
  optional int64   identifier       = 11;
  optional Content content          = 12;

  optional Content content_extract  = 13;
  optional string  generator        = 14;

  optional string  raw_published    = 15;

}

message CrawlEntry {

  repeated Link    link                 = 1;
  optional Link    canonical_link       = 2;
  optional string  title                = 3;
  optional string  hashcode             = 4;
  repeated Lang    lang                 = 5;
  repeated Author  author               = 6;
  repeated string  category             = 7;
  optional float   spam_probability     = 8;
  optional string  last_published       = 9;
  optional string  date_found           = 10;
  optional int64   identifier           = 11;
  optional Content content              = 12;

  optional Content content_extract      = 13;
  optional string  generator            = 14;

  optional string  raw_published        = 15;

  optional string  domain_hashcode      = 16;
  optional string  subdomain_hashcode   = 17;

}

message FeedEntry {
  repeated Link    link             = 1;
  optional Link    canonical_link   = 2;
  optional string  title            = 3;
  optional string  hashcode         = 4;
  repeated Lang    lang             = 5;
  repeated Author  author           = 6;
  repeated string  category         = 7;
  optional float   spam_probability = 8;
  optional string  last_published   = 9;
  optional string  date_found       = 10;
  optional int64   identifier       = 11;
  optional Content content          = 12;
}

message CommentEntry {
    optional string permalink           = 1;
    optional string permalink_title     = 2;
    optional string permalink_hashcode  = 3;
    optional string raw_published       = 4;
}

message Entry {
  optional Source         source          = 1;
  optional Feed           feed            = 2;
  optional FeedEntry      feed_entry      = 3;
  optional PermalinkEntry permalink_entry = 4;
  optional CommentEntry   comment_entry   = 5;
  optional CrawlEntry     crawl_entry     = 6;
}

message Response {
  optional string request_url          = 1;
  optional string previous_request_url = 2;
  optional string next_request_url     = 3;
  repeated Entry  entry                = 4;
}

/**
 * 
 * lang: 
 * 
 * The twitter/user specified language.  This might be incorrect but we like to
 * preserve all metadata.
 *
 * statuses_count:
 * 
 * total number of status updates from this user.
 * 
 */

/*

Tue Sep 01 2009 10:32 AM (burton@tailrank.com): NOTE: this is still in
development but I wanted to preserve this message signature as I believe we're
90% of the way there to supporting this extension.

message TwitterEntry {

  optional uint32 followers          = 1;
  optional uint32 friends            = 2;
  optional string location           = 3;
  optional string profile_image_url  = 4;
  optional string lang               = 5;
  optional uint32 statuses_count     = 6;
  optional bool   verified           = 7;
  
}
*/
